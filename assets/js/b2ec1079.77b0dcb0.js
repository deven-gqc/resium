"use strict";(self.webpackChunkresium_docs=self.webpackChunkresium_docs||[]).push([[1242],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return t?i.createElement(f,o(o({ref:n},u),{},{components:t})):i.createElement(f,o({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5363:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=t(7462),r=(t(7294),t(3905));const a={id:"getting_started",title:"Getting Started"},o="Getting Started",l={unversionedId:"getting_started",id:"getting_started",title:"Getting Started",description:"After installation, let's create a hello world application.",source:"@site/docs/02-getting_started.md",sourceDirName:".",slug:"/getting_started",permalink:"/getting_started",draft:!1,editUrl:"https://github.com/reearth/resium/edit/main/docs/docs/02-getting_started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"getting_started",title:"Getting Started"},sidebar:"docs",previous:{title:"Installation",permalink:"/installation"},next:{title:"Guide",permalink:"/guide"}},s={},p=[{value:"The simplest Resium application",id:"the-simplest-resium-application",level:2},{value:"Displaying an entity",id:"displaying-an-entity",level:2},{value:"Displaying description of an entity",id:"displaying-description-of-an-entity",level:2},{value:"Adding Cesium world terrain",id:"adding-cesium-world-terrain",level:2},{value:"Loading your own data",id:"loading-your-own-data",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}],u={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"After ",(0,r.kt)("a",{parentName:"p",href:"/installation"},"installation"),", let's create a hello world application."),(0,r.kt)("p",null,"You can import all resium components as following."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Viewer } from "resium";\n')),(0,r.kt)("h2",{id:"the-simplest-resium-application"},"The simplest Resium application"),(0,r.kt)("p",null,"The simplest resium application is as following."),(0,r.kt)("p",null,"Just as Cesium's root object is ",(0,r.kt)("inlineCode",{parentName:"p"},"Viewer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<Viewer>")," is also a root component in resium."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"app.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Viewer } from "resium";\n\nfunction App() {\n  return <Viewer />;\n}\n\nexport default App;\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"index.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import ReactDOM from "react-dom/client";\nimport App from "./app";\n\nconst root = ReactDOM.createRoot(document.getElementById("wrapper"));\nroot.render(<App />);\n')),(0,r.kt)("p",null,"This is almost equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const viewer = new Cesium.Viewer("wrapper");\n')),(0,r.kt)("p",null,"But the viewer is displayed small because it does not have its own size."),(0,r.kt)("p",null,"The easiest solution is using ",(0,r.kt)("inlineCode",{parentName:"p"},"full")," prop. It makes the viewer displayed on the full screen."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<Viewer full />\n")),(0,r.kt)("p",null,"This is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<Viewer\n  style={{\n    position: "absolute",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  }}\n/>\n')),(0,r.kt)("p",null,"If you want to customize the container styles, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"style")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," prop. They are applied to ",(0,r.kt)("inlineCode",{parentName:"p"},"div")," element rendered by a Viewer component."),(0,r.kt)("p",null,"It means that CSS-in-JS libraries (styled-components, emotion...) are available on a Viewer component."),(0,r.kt)("p",null,"Hereafter, we omit the code such as HMR in example code."),(0,r.kt)("h2",{id:"displaying-an-entity"},"Displaying an entity"),(0,r.kt)("p",null,"Next, let's display an entity on Cesium. Entity component is available in resium."),(0,r.kt)("p",null,"Entity has many way to visualize geograohical data. Here let's try to use PointGraphics."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, Entity } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\nconst pointGraphics = { pixelSize: 10 };\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position} point={pointGraphics} />\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("p",null,"This is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const viewer = new Cesium.Viewer("wrapper");\nconst entity = new Cesium.Entity({\n  position: Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100),\n  point: { pixelSize: 10 },\n});\nviewer.entities.add(entity);\n')),(0,r.kt)("p",null,"If HMR is enabled, it fully works in resium, so entity is updated without reloading the page when the source code is changed!"),(0,r.kt)("p",null,"The following is also the same. It uses ",(0,r.kt)("inlineCode",{parentName:"p"},"PointGraphics")," component. This enables updating graphic properties with minimal cost."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, Entity, PointGraphics } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position}>\n        <PointGraphics pixelSize={10} />\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("h2",{id:"displaying-description-of-an-entity"},"Displaying description of an entity"),(0,r.kt)("p",null,"The following example is displaying a simple name and description of the entity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, Entity, PointGraphics } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position} name="Tokyo" description="Hello, world.">\n        <PointGraphics pixelSize={10} />\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("p",null,"If you want to render rich description, ",(0,r.kt)("inlineCode",{parentName:"p"},"EntityDescription")," component is the best. It enables using JSX in the description of entities!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, Entity, PointGraphics, EntityDescription } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position} name="Tokyo">\n        <PointGraphics pixelSize={10} />\n        <EntityDescription>\n          <h1>Hello, world.</h1>\n          <p>JSX is available here!</p>\n        </EntityDescription>\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("h2",{id:"adding-cesium-world-terrain"},"Adding Cesium world terrain"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"terrainProvider")," prop of ",(0,r.kt)("inlineCode",{parentName:"p"},"Viewer")," is available."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, Entity, PointGraphics, EntityDescription } from "resium";\nimport { Cartesian3, createWorldTerrain } from "cesium";\n\nconst terrainProvider = createWorldTerrain();\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full terrainProvider={terrainProvider}>\n      <Entity position={position} name="Tokyo">\n        <PointGraphics pixelSize={10} />\n        <EntityDescription>\n          <h1>Hello, world.</h1>\n          <p>JSX is available here!</p>\n        </EntityDescription>\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("h2",{id:"loading-your-own-data"},"Loading your own data"),(0,r.kt)("p",null,"Cesium and resium support KML, GeoJSON, TopoJSON, and CZML. Let's load and display your own data!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, GeoJsonDataSource, KmlDataSource } from "resium";\n\nconst data = {\n  type: "Feature",\n  properties: {\n    name: "Coors Field",\n    amenity: "Baseball Stadium",\n    popupContent: "This is where the Rockies play!",\n  },\n  geometry: {\n    type: "Point",\n    coordinates: [-104.99404, 39.75621],\n  },\n};\n\nfunction App() {\n  return (\n    <Viewer full>\n      <GeoJsonDataSource data={"your_geo_json.geojson"} />\n      <KmlDataSource data={"your_geo_json.kml"} />\n      <GeoJsonDataSource data={data} />\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("p",null,"3D tiles is also available."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nimport { Viewer, Cesium3DTileset } from "resium";\nimport { IonResource } from "cesium";\n\nfunction App() {\n  let viewer; // This will be raw Cesium\'s Viewer object.\n\n  const handleReady = tileset => {\n    if (viewer) {\n      viewer.zoomTo(tileset);\n    }\n  };\n\n  return (\n    <Viewer\n      full\n      ref={e => {\n        viewer = e && e.cesiumElement;\n      }}>\n      <Cesium3DTileset url={IonResource.fromAssetId(5714)} onReady={handleReady} />\n    </Viewer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("h2",{id:"whats-next"},"What's next?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/guide"},"Guide")),(0,r.kt)("li",{parentName:"ul"},"Components: see menu"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://resium.reearth.io/examples/"},"Examples")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://cesium.com/learn/cesiumjs/ref-doc/"},"Cesium Documentation"))))}m.isMDXComponent=!0}}]);